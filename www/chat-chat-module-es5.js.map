{"version":3,"sources":["./node_modules/api-ai-javascript/es6/ApiAiClient.js","./node_modules/api-ai-javascript/es6/ApiAiConstants.js","./node_modules/api-ai-javascript/es6/Errors.js","./node_modules/api-ai-javascript/es6/Interfaces.js","./node_modules/api-ai-javascript/es6/Request/EventRequest.js","./node_modules/api-ai-javascript/es6/Request/Request.js","./node_modules/api-ai-javascript/es6/Request/TextRequest.js","./node_modules/api-ai-javascript/es6/XhrRequest.js","./src/app/chat/chat.page.html","./src/app/chat/chat.module.ts","./src/app/chat/chat.page.scss","./src/app/chat/chat.page.ts","./src/app/services/chat.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACO;AACH;AACN;AACnB;AACqB;AAC3C;AACP;AACA;AACA,sBAAsB,qEAA6B;AACnD;AACA;AACA,uCAAuC,8DAAc;AACrD,6CAA6C,8DAAc;AAC3D,6CAA6C,8DAAc;AAC3D;AACA;AACA,mCAAmC;AACnC;AACA,sBAAsB,qEAA6B;AACnD;AACA;AACA,mBAAmB,4DAAW;AAC9B;AACA,0CAA0C,cAAc;AACxD;AACA,sBAAsB,qEAA6B;AACnD;AACA,yBAAyB;AACzB,mBAAmB,kEAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8DAA8D;AAC9D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qDAAqD,8DAAc;AACnE;AACA;AACA,+CAA+C,8DAAc;AAC7D;AACA;AACA,qDAAqD,8DAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sGAAsG;AAC3G;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;;;;;;;;;;;;ACxBzC;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,0DAA0D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,0DAA0D;AAC/D,CAAC,sCAAsC;;;;;;;;;;;;;ACxBvC;AAAA;AAAA;AAAgC;AACzB,2BAA2B,gDAAO;AACzC;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAA8C;AACP;AACvC;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAiB;AACzC;AACA;AACA;AACA,4BAA4B,yDAAiB;AAC7C;AACA;AACA,4BAA4B,yDAAiB;AAC7C;AACA;AACA;AACA,wBAAwB,yDAAiB;AACzC;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACe,sEAAO,EAAC;;;;;;;;;;;;;ACxCvB;AAAA;AAAA;AAAgC;AACjB,0BAA0B,gDAAO;AAChD;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gEAAgE;AAChE;AACA;AACA,iEAAiE;AACjE;AACA;AACA,gEAAgE;AAChE;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,uDAAuD;AAC5D,CAAC,gCAAgC;AAClB,yEAAU,EAAC;;;;;;;;;;;;AC7G1B,4hBAA4hB,6GAA6G,aAAa,mBAAmB,gyB;;;;;;;;;;;;;;;;;;;;;;ACAhoB;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDA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","file":"chat-chat-module-es5.js","sourcesContent":["import { ApiAiConstants } from \"./ApiAiConstants\";\nimport { ApiAiClientConfigurationError } from \"./Errors\";\nimport { EventRequest } from \"./Request/EventRequest\";\nimport TextRequest from \"./Request/TextRequest\";\nexport * from \"./Interfaces\";\nexport { ApiAiConstants } from \"./ApiAiConstants\";\nexport class ApiAiClient {\n    constructor(options) {\n        if (!options || !options.accessToken) {\n            throw new ApiAiClientConfigurationError(\"Access token is required for new ApiAi.Client instance\");\n        }\n        this.accessToken = options.accessToken;\n        this.apiLang = options.lang || ApiAiConstants.DEFAULT_CLIENT_LANG;\n        this.apiVersion = options.version || ApiAiConstants.DEFAULT_API_VERSION;\n        this.apiBaseUrl = options.baseUrl || ApiAiConstants.DEFAULT_BASE_URL;\n        this.sessionId = options.sessionId || this.guid();\n    }\n    textRequest(query, options = {}) {\n        if (!query) {\n            throw new ApiAiClientConfigurationError(\"Query should not be empty\");\n        }\n        options.query = query;\n        return new TextRequest(this, options).perform();\n    }\n    eventRequest(eventName, eventData = {}, options = {}) {\n        if (!eventName) {\n            throw new ApiAiClientConfigurationError(\"Event name can not be empty\");\n        }\n        options.event = { name: eventName, data: eventData };\n        return new EventRequest(this, options).perform();\n    }\n    // @todo: implement local tts request\n    /*public ttsRequest(query) {\n        if (!query) {\n            throw new ApiAiClientConfigurationError(\"Query should not be empty\");\n        }\n        return new TTSRequest(this).makeTTSRequest(query);\n    }*/\n    /*public userEntitiesRequest(options: IRequestOptions = {}): UserEntitiesRequest {\n        return new UserEntitiesRequest(this, options);\n    }*/\n    getAccessToken() {\n        return this.accessToken;\n    }\n    getApiVersion() {\n        return (this.apiVersion) ? this.apiVersion : ApiAiConstants.DEFAULT_API_VERSION;\n    }\n    getApiLang() {\n        return (this.apiLang) ? this.apiLang : ApiAiConstants.DEFAULT_CLIENT_LANG;\n    }\n    getApiBaseUrl() {\n        return (this.apiBaseUrl) ? this.apiBaseUrl : ApiAiConstants.DEFAULT_BASE_URL;\n    }\n    setSessionId(sessionId) {\n        this.sessionId = sessionId;\n    }\n    getSessionId() {\n        return this.sessionId;\n    }\n    /**\n     * generates new random UUID\n     * @returns {string}\n     */\n    guid() {\n        const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\n            s4() + \"-\" + s4() + s4() + s4();\n    }\n}\n","export var ApiAiConstants;\n(function (ApiAiConstants) {\n    let AVAILABLE_LANGUAGES;\n    (function (AVAILABLE_LANGUAGES) {\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"EN\"] = \"en\"] = \"EN\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"DE\"] = \"de\"] = \"DE\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"ES\"] = \"es\"] = \"ES\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"PT_BR\"] = \"pt-BR\"] = \"PT_BR\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"ZH_HK\"] = \"zh-HK\"] = \"ZH_HK\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"ZH_CN\"] = \"zh-CN\"] = \"ZH_CN\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"ZH_TW\"] = \"zh-TW\"] = \"ZH_TW\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"NL\"] = \"nl\"] = \"NL\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"FR\"] = \"fr\"] = \"FR\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"IT\"] = \"it\"] = \"IT\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"JA\"] = \"ja\"] = \"JA\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"KO\"] = \"ko\"] = \"KO\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"PT\"] = \"pt\"] = \"PT\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"RU\"] = \"ru\"] = \"RU\";\n        AVAILABLE_LANGUAGES[AVAILABLE_LANGUAGES[\"UK\"] = \"uk\"] = \"UK\";\n    })(AVAILABLE_LANGUAGES = ApiAiConstants.AVAILABLE_LANGUAGES || (ApiAiConstants.AVAILABLE_LANGUAGES = {}));\n    ApiAiConstants.VERSION = \"2.0.0-beta.20\";\n    ApiAiConstants.DEFAULT_BASE_URL = \"https://api.api.ai/v1/\";\n    ApiAiConstants.DEFAULT_API_VERSION = \"20150910\";\n    ApiAiConstants.DEFAULT_CLIENT_LANG = AVAILABLE_LANGUAGES.EN;\n})(ApiAiConstants || (ApiAiConstants = {}));\n","export class ApiAiBaseError extends Error {\n    constructor(message) {\n        super(message);\n        this.message = message;\n        this.stack = new Error().stack;\n    }\n}\nexport class ApiAiClientConfigurationError extends ApiAiBaseError {\n    constructor(message) {\n        super(message);\n        this.name = \"ApiAiClientConfigurationError\";\n    }\n}\nexport class ApiAiRequestError extends ApiAiBaseError {\n    constructor(message, code = null) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        this.name = \"ApiAiRequestError\";\n    }\n}\n","export var IStreamClient;\n(function (IStreamClient) {\n    let ERROR;\n    (function (ERROR) {\n        ERROR[ERROR[\"ERR_NETWORK\"] = 0] = \"ERR_NETWORK\";\n        ERROR[ERROR[\"ERR_AUDIO\"] = 1] = \"ERR_AUDIO\";\n        ERROR[ERROR[\"ERR_SERVER\"] = 2] = \"ERR_SERVER\";\n        ERROR[ERROR[\"ERR_CLIENT\"] = 3] = \"ERR_CLIENT\";\n    })(ERROR = IStreamClient.ERROR || (IStreamClient.ERROR = {}));\n    let EVENT;\n    (function (EVENT) {\n        EVENT[EVENT[\"MSG_WAITING_MICROPHONE\"] = 0] = \"MSG_WAITING_MICROPHONE\";\n        EVENT[EVENT[\"MSG_MEDIA_STREAM_CREATED\"] = 1] = \"MSG_MEDIA_STREAM_CREATED\";\n        EVENT[EVENT[\"MSG_INIT_RECORDER\"] = 2] = \"MSG_INIT_RECORDER\";\n        EVENT[EVENT[\"MSG_RECORDING\"] = 3] = \"MSG_RECORDING\";\n        EVENT[EVENT[\"MSG_SEND\"] = 4] = \"MSG_SEND\";\n        EVENT[EVENT[\"MSG_SEND_EMPTY\"] = 5] = \"MSG_SEND_EMPTY\";\n        EVENT[EVENT[\"MSG_SEND_EOS_OR_JSON\"] = 6] = \"MSG_SEND_EOS_OR_JSON\";\n        EVENT[EVENT[\"MSG_WEB_SOCKET\"] = 7] = \"MSG_WEB_SOCKET\";\n        EVENT[EVENT[\"MSG_WEB_SOCKET_OPEN\"] = 8] = \"MSG_WEB_SOCKET_OPEN\";\n        EVENT[EVENT[\"MSG_WEB_SOCKET_CLOSE\"] = 9] = \"MSG_WEB_SOCKET_CLOSE\";\n        EVENT[EVENT[\"MSG_STOP\"] = 10] = \"MSG_STOP\";\n        EVENT[EVENT[\"MSG_CONFIG_CHANGED\"] = 11] = \"MSG_CONFIG_CHANGED\";\n    })(EVENT = IStreamClient.EVENT || (IStreamClient.EVENT = {}));\n})(IStreamClient || (IStreamClient = {}));\n","import Request from \"./Request\";\nexport class EventRequest extends Request {\n}\n","import { ApiAiRequestError } from \"../Errors\";\nimport XhrRequest from \"../XhrRequest\";\nclass Request {\n    constructor(apiAiClient, options) {\n        this.apiAiClient = apiAiClient;\n        this.options = options;\n        this.uri = this.apiAiClient.getApiBaseUrl() + \"query?v=\" + this.apiAiClient.getApiVersion();\n        this.requestMethod = XhrRequest.Method.POST;\n        this.headers = {\n            Authorization: \"Bearer \" + this.apiAiClient.getAccessToken(),\n        };\n        this.options.lang = this.apiAiClient.getApiLang();\n        this.options.sessionId = this.apiAiClient.getSessionId();\n    }\n    static handleSuccess(xhr) {\n        return Promise.resolve(JSON.parse(xhr.responseText));\n    }\n    static handleError(xhr) {\n        let error = new ApiAiRequestError(null);\n        try {\n            const serverResponse = JSON.parse(xhr.responseText);\n            if (serverResponse.status && serverResponse.status.errorDetails) {\n                error = new ApiAiRequestError(serverResponse.status.errorDetails, serverResponse.status.code);\n            }\n            else {\n                error = new ApiAiRequestError(xhr.statusText, xhr.status);\n            }\n        }\n        catch (e) {\n            error = new ApiAiRequestError(xhr.statusText, xhr.status);\n        }\n        return Promise.reject(error);\n    }\n    perform(overrideOptions = null) {\n        const options = overrideOptions ? overrideOptions : this.options;\n        return XhrRequest.ajax(this.requestMethod, this.uri, options, this.headers)\n            .then(Request.handleSuccess.bind(this))\n            .catch(Request.handleError.bind(this));\n    }\n}\nexport default Request;\n","import Request from \"./Request\";\nexport default class TextRequest extends Request {\n}\n","/**\n * quick ts implementation of example from\n * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\n * with some minor improvements\n * @todo: test (?)\n * @todo: add node.js implementation with node's http inside. Just to make SDK cross-platform\n */\nclass XhrRequest {\n    // Method that performs the ajax request\n    static ajax(method, url, args = null, headers = null, options = {}) {\n        // Creating a promise\n        return new Promise((resolve, reject) => {\n            // Instantiates the XMLHttpRequest\n            const client = XhrRequest.createXMLHTTPObject();\n            let uri = url;\n            let payload = null;\n            // Add given payload to get request\n            if (args && (method === XhrRequest.Method.GET)) {\n                uri += \"?\";\n                let argcount = 0;\n                for (const key in args) {\n                    if (args.hasOwnProperty(key)) {\n                        if (argcount++) {\n                            uri += \"&\";\n                        }\n                        uri += encodeURIComponent(key) + \"=\" + encodeURIComponent(args[key]);\n                    }\n                }\n            }\n            else if (args) {\n                if (!headers) {\n                    headers = {};\n                }\n                headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n                payload = JSON.stringify(args);\n            }\n            for (const key in options) {\n                if (key in client) {\n                    client[key] = options[key];\n                }\n            }\n            // hack: method[method] is somewhat like .toString for enum Method\n            // should be made in normal way\n            client.open(XhrRequest.Method[method], uri, true);\n            // Add given headers\n            if (headers) {\n                for (const key in headers) {\n                    if (headers.hasOwnProperty(key)) {\n                        client.setRequestHeader(key, headers[key]);\n                    }\n                }\n            }\n            payload ? client.send(payload) : client.send();\n            client.onload = () => {\n                if (client.status >= 200 && client.status < 300) {\n                    // Performs the function \"resolve\" when this.status is equal to 2xx\n                    resolve(client);\n                }\n                else {\n                    // Performs the function \"reject\" when this.status is different than 2xx\n                    reject(client);\n                }\n            };\n            client.onerror = () => {\n                reject(client);\n            };\n        });\n    }\n    static get(url, payload = null, headers = null, options = {}) {\n        return XhrRequest.ajax(XhrRequest.Method.GET, url, payload, headers, options);\n    }\n    static post(url, payload = null, headers = null, options = {}) {\n        return XhrRequest.ajax(XhrRequest.Method.POST, url, payload, headers, options);\n    }\n    static put(url, payload = null, headers = null, options = {}) {\n        return XhrRequest.ajax(XhrRequest.Method.PUT, url, payload, headers, options);\n    }\n    static delete(url, payload = null, headers = null, options = {}) {\n        return XhrRequest.ajax(XhrRequest.Method.DELETE, url, payload, headers, options);\n    }\n    static createXMLHTTPObject() {\n        let xmlhttp = null;\n        for (const i of XhrRequest.XMLHttpFactories) {\n            try {\n                xmlhttp = i();\n            }\n            catch (e) {\n                continue;\n            }\n            break;\n        }\n        return xmlhttp;\n    }\n}\nXhrRequest.XMLHttpFactories = [\n    () => new XMLHttpRequest(),\n    () => new window[\"ActiveXObject\"](\"Msxml2.XMLHTTP\"),\n    () => new window[\"ActiveXObject\"](\"Msxml3.XMLHTTP\"),\n    () => new window[\"ActiveXObject\"](\"Microsoft.XMLHTTP\")\n];\n(function (XhrRequest) {\n    let Method;\n    (function (Method) {\n        Method[Method[\"GET\"] = \"GET\"] = \"GET\";\n        Method[Method[\"POST\"] = \"POST\"] = \"POST\";\n        Method[Method[\"PUT\"] = \"PUT\"] = \"PUT\";\n        Method[Method[\"DELETE\"] = \"DELETE\"] = \"DELETE\";\n    })(Method = XhrRequest.Method || (XhrRequest.Method = {}));\n})(XhrRequest || (XhrRequest = {}));\nexport default XhrRequest;\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-row>\\n      <ion-col size=\\\"2\\\">\\n          <img src=\\\"../../assets/icon3.png\\\" width=\\\"37px\\\">\\n      </ion-col>\\n      <ion-col size=\\\"10\\\">\\n          <ion-title class=\\\"title\\\">Jarvis</ion-title>\\n      </ion-col>\\n    </ion-row>\\n\\n    \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div style=\\\"padding: 10px\\\"></div>\\n  <ng-container *ngFor=\\\"let message of messages | async\\\" class=\\\"chat-container\\\">\\n    \\n    <div class=\\\"message\\\" [ngClass]=\\\"{ 'from': message.sentBy === 'bot',\\n                                      'to':   message.sentBy === 'user' }\\\">\\n      {{ message.content }}\\n    </div>\\n  \\n  </ng-container>\\n  <div style=\\\"padding: 50px\\\"></div>\\n</ion-content>\\n<ion-footer>\\n  <ion-grid class=\\\"type-section\\\">\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Type a message\\\" name=\\\"message\\\" [(ngModel)]=\\\"message\\\" (keyup)=\\\"onMessageType($event)\\\">\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <button class=\\\"voice-btn\\\" *ngIf=\\\"!sendButton\\\">\\n          <img src=\\\"../../assets/Google_mic.svg.png\\\" class=\\\"voice-icon\\\" (click)=\\\"startListening()\\\">\\n        </button>\\n        <button class=\\\"voice-btn\\\" *ngIf=\\\"sendButton\\\">\\n          <img src=\\\"../../assets/send-button.png\\\" class=\\\"voice-icon\\\" (click)=\\\"sendMessage()\\\">\\n        </button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPage } from './chat.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ChatPage]\n})\nexport class ChatPageModule {}\n","module.exports = \".title {\\n  margin-top: 4px;\\n  margin-left: -30px;\\n}\\n\\n.voice-icon {\\n  width: 20px;\\n}\\n\\n.voice-btn {\\n  background: white;\\n  border-radius: 50%;\\n  text-align: center;\\n  padding: 10px;\\n  width: 50px;\\n  margin-top: 5px;\\n  height: 50px;\\n}\\n\\ninput[type=text] {\\n  width: 100%;\\n  padding: 12px 20px;\\n  margin: 8px 0;\\n  display: inline-block;\\n  border: 1px solid white;\\n  border-radius: 4px;\\n  box-sizing: border-box;\\n}\\n\\n.type-section {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  left: 0;\\n  bottom: 0;\\n  width: 100%;\\n  background-color: rgba(236, 236, 236, 0.904);\\n}\\n\\n.chat-container {\\n  padding: 100px;\\n}\\n\\n.message {\\n  border-radius: 50px;\\n  margin: 0 15px 10px;\\n  padding: 15px 20px;\\n  position: relative;\\n  font-weight: bold;\\n}\\n\\n.message.to {\\n  background-color: #2095FE;\\n  color: #fff;\\n  margin-left: 100px;\\n  text-align: right;\\n}\\n\\n.message.from {\\n  background-color: #E5E4E9;\\n  color: #363636;\\n  margin-right: 100px;\\n}\\n\\n.message.to + .message.to,\\n.message.from + .message.from {\\n  margin-top: -10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpZ2lsZWRnZS9Eb3dubG9hZHMvdm9pY2UtYXBwL3NyYy9hcHAvY2hhdC9jaGF0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvY2hhdC9jaGF0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtBQ0NKOztBRENBO0VBQ0ksaUJBQUE7RUFFQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtBQ0NKOztBRENBO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0FDRUo7O0FEQUE7RUFDRyx3QkFBQTtFQUFBLGdCQUFBO0VBQ0EsT0FBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsNENBQUE7QUNHSDs7QUREQTtFQUNJLGNBQUE7QUNJSjs7QURGQTtFQUNJLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNLSjs7QURIQTtFQUNJLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNNSjs7QURKQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FDT0o7O0FESkE7O0VBRUEsaUJBQUE7QUNPQSIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUge1xuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICBtYXJnaW4tbGVmdDogLTMwcHg7XG59XG5cbi52b2ljZS1pY29uIHtcbiAgICB3aWR0aDogMjBweDtcbn1cbi52b2ljZS1idG4ge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIC8vIGJveC1zaGFkb3c6IDFweCAycHggIzg4ODg4ODtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIGhlaWdodDogNTBweDtcbn1cbmlucHV0W3R5cGU9dGV4dF0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEycHggMjBweDtcbiAgICBtYXJnaW46IDhweCAwO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4udHlwZS1zZWN0aW9uIHtcbiAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICBsZWZ0OiAwO1xuICAgYm90dG9tOiAwO1xuICAgd2lkdGg6IDEwMCU7XG4gICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIzNiwgMjM2LCAyMzYsIDAuOTA0KTsgXG59XG4uY2hhdC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDEwMHB4O1xufVxuLm1lc3NhZ2Uge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgbWFyZ2luOiAwIDE1cHggMTBweDtcbiAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLm1lc3NhZ2UudG8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDk1RkU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLm1lc3NhZ2UuZnJvbSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U1RTRFOTtcbiAgICBjb2xvcjogIzM2MzYzNjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwMHB4O1xuXG59XG4ubWVzc2FnZS50byArIC5tZXNzYWdlLnRvLFxuLm1lc3NhZ2UuZnJvbSArIC5tZXNzYWdlLmZyb20ge1xubWFyZ2luLXRvcDogLTEwcHg7XG59XG4iLCIudGl0bGUge1xuICBtYXJnaW4tdG9wOiA0cHg7XG4gIG1hcmdpbi1sZWZ0OiAtMzBweDtcbn1cblxuLnZvaWNlLWljb24ge1xuICB3aWR0aDogMjBweDtcbn1cblxuLnZvaWNlLWJ0biB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMTBweDtcbiAgd2lkdGg6IDUwcHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG5pbnB1dFt0eXBlPXRleHRdIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEycHggMjBweDtcbiAgbWFyZ2luOiA4cHggMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4udHlwZS1zZWN0aW9uIHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzYsIDIzNiwgMjM2LCAwLjkwNCk7XG59XG5cbi5jaGF0LWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDEwMHB4O1xufVxuXG4ubWVzc2FnZSB7XG4gIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gIG1hcmdpbjogMCAxNXB4IDEwcHg7XG4gIHBhZGRpbmc6IDE1cHggMjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLm1lc3NhZ2UudG8ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjA5NUZFO1xuICBjb2xvcjogI2ZmZjtcbiAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLm1lc3NhZ2UuZnJvbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFNUU0RTk7XG4gIGNvbG9yOiAjMzYzNjM2O1xuICBtYXJnaW4tcmlnaHQ6IDEwMHB4O1xufVxuXG4ubWVzc2FnZS50byArIC5tZXNzYWdlLnRvLFxuLm1lc3NhZ2UuZnJvbSArIC5tZXNzYWdlLmZyb20ge1xuICBtYXJnaW4tdG9wOiAtMTBweDtcbn0iXX0= */\"","import { Component, OnInit, ChangeDetectorRef, ApplicationRef } from '@angular/core';\nimport { SpeechRecognition } from '@ionic-native/speech-recognition/ngx';\nimport { ChatService, Message } from '../services/chat.service';\nimport { Observable, interval } from 'rxjs';\nimport { scan, first, switchMap } from 'rxjs/operators';\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.page.html',\n  styleUrls: ['./chat.page.scss'],\n})\nexport class ChatPage implements OnInit {\n  // tslint:disable-next-line: ban-types\n  matches: string;\n  message: string;\n  sendButton : boolean;\n  messages: Observable<Message[]>;\n  constructor(private speechRecognition: SpeechRecognition, private cd: ChangeDetectorRef, public chat: ChatService, private appRef: ApplicationRef) { \n    let statringMsg = [\n      {\n        content : 'Hi I am your voice assistent. How Can i help you? Lets See the Example',\n      }\n    ]\n    statringMsg.forEach(msg => {\n      const botMessage = new Message(msg.content, 'bot');\n      this.chat.update(botMessage); \n    })\n    \n  }\n\n  ngOnInit() {\n    // appends to array after each new message is added to feedSource\n    this.messages = this.chat.conversation.asObservable()\n    .pipe(\n      scan((acc, val) => acc.concat(val) )\n    )\n        \n  }\n\n  //to get a keyup event and checking for string length \n  //if it is 0 then send button will be false\n  //otherwise send button will be true\n  onMessageType(event) {\n    const messageLength = event.target.value.length;\n    if (messageLength > 0) {\n      this.sendButton = true;\n    } else {\n      this.sendButton = false;\n    }\n  }\n\n  //on click of send button \n  //sending message to chat bot \n  sendMessage() {\n    this.chat.converse(this.message);\n    this.message = '';\n    this.sendButton = false;\n  }\n\n  startListening() {\n    this.speechRecognition.startListening()\n      .subscribe(\n        (matches: Array<string>) => {\n          this.appRef.isStable.pipe(\n            first(stable => stable),\n            switchMap(() => interval(1000))\n          ).subscribe(counter => {\n            if(counter == 0) {\n              this.chat.converse(matches[0]);\n              this.message = '';\n            }\n            this.cd.detectChanges();\n          })\n        },\n        (onerror) => console.log('error:', onerror)\n      )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n// import { ApiAiClient } from 'api-ai-javascript';\nimport { ApiAiClient } from 'api-ai-javascript/es6/ApiAiClient'\n\nimport { BehaviorSubject } from 'rxjs';\n// Message class for displaying messages in the component\nexport class Message {\n  constructor(public content: string, public sentBy: string) { }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n\n\n  readonly token = environment.dialogflow.angularBot;\n  readonly client = new ApiAiClient({ accessToken: this.token });\n\n  conversation = new BehaviorSubject<Message[]>([]);\n\n  constructor() {}\n\n  // Sends and receives messages via DialogFlow\n  converse(msg: string) {\n    const userMessage = new Message(msg, 'user');\n    this.update(userMessage);\n    return this.client.textRequest(msg)\n      .then(res => {\n        const speech = res.result.fulfillment.speech;\n        const botMessage = new Message(speech, 'bot');\n        this.update(botMessage);\n      });\n  }\n\n\n\n  // Adds message to source\n  update(msg: Message) {\n    this.conversation.next([msg]);\n  }\n}\n"],"sourceRoot":""}